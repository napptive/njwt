// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/napptive/njwt/pkg/interceptors (interfaces: SecretProvider)

// Package interceptors is a generated GoMock package.
package interceptors

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSecretProvider is a mock of SecretProvider interface.
type MockSecretProvider struct {
	ctrl     *gomock.Controller
	recorder *MockSecretProviderMockRecorder
}

// MockSecretProviderMockRecorder is the mock recorder for MockSecretProvider.
type MockSecretProviderMockRecorder struct {
	mock *MockSecretProvider
}

// NewMockSecretProvider creates a new mock instance.
func NewMockSecretProvider(ctrl *gomock.Controller) *MockSecretProvider {
	mock := &MockSecretProvider{ctrl: ctrl}
	mock.recorder = &MockSecretProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretProvider) EXPECT() *MockSecretProviderMockRecorder {
	return m.recorder
}

// GetZoneSecret mocks base method.
func (m *MockSecretProvider) GetZoneSecret(arg0 string) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetZoneSecret", arg0)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetZoneSecret indicates an expected call of GetZoneSecret.
func (mr *MockSecretProviderMockRecorder) GetZoneSecret(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetZoneSecret", reflect.TypeOf((*MockSecretProvider)(nil).GetZoneSecret), arg0)
}
